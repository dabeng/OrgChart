{"version":3,"sources":["jquery.orgchart.js"],"names":["factory","module","exports","require","window","document","jQuery","$","undefined","OrgChart","elem","opts","this","$chartContainer","defaultOptions","nodeTitle","nodeId","toggleSiblingsResp","visibleLevel","chartClass","exportButton","exportFilename","exportFileextension","parentNodeSymbol","draggable","direction","pan","zoom","zoominLimit","zoomoutLimit","prototype","init","that","options","extend","$chart","remove","data","class","click","event","target","closest","length","find","removeClass","MutationObserver","triggerInitEvent","type","buildHierarchy","buildJsonDS","children","ajaxURL","attachRel","append","ajax","url","dataType","done","textStatus","jqXHR","fail","errorThrown","console","log","always","attachExportButton","bindPan","bindZoom","mo","mutations","disconnect","initTime","i","j","addedNodes","classList","contains","initCompleted","initEvent","Event","trigger","observe","childList","$exportBtn","text","e","preventDefault","export","setOptions","val","unbindPan","unbindZoom","panStartHandler","delegateTarget","touches","css","lastX","lastY","lastTf","temp","split","indexOf","parseInt","startX","startY","targetTouches","pageX","pageY","on","newX","newY","matrix","join","panEndHandler","chart","off","zoomWheelHandler","oc","newScale","originalEvent","deltaY","setChartScale","zoomStartHandler","dist","getPinchDist","zoomingHandler","zoomEndHandler","diff","Math","sqrt","clientX","clientY","targetScale","abs","parseFloat","$li","subObj","name","contents","eq","trim","relationship","parent","is","siblings","attr","id","each","push","flags","forEach","item","loopChart","$tr","getHierarchy","valid","getNodeState","$node","relation","$target","exist","visible","getRelatedNodes","hideParentEnd","upperLevel","addClass","slice","removeAttr","hideParent","$upperLevel","hideSiblings","$parent","one","showParentEnd","node","isInAction","switchVerticalArrow","showParent","repaint","bind","stopAjax","$nodeLevel","isVisibleNode","index","hideChildrenEnd","animatedNodes","isVerticalDesc","lowerLevel","prevAll","addBack","last","hideChildren","$lowerLevel","$animatedNodes","filter","get","showChildrenEnd","showChildren","$levels","hideSiblingsEnd","$nodeContainer","nodeContainer","lines","$siblings","nextAll","prev","end","switchHorizontalArrow","$lines","showSiblingsEnd","visibleNodes","showRelatedParentEnd","showSiblings","$visibleNodes","startLoading","$edge","not","prop","endLoading","$arrow","toggleClass","$prevSib","$nextSib","next","$sibs","sibsVisible","style","offsetWidth","nodeEnterLeaveHandler","flag","$topEdge","$bottomEdge","$leftEdge","nodeClickHandler","loadNodes","rel","isEmptyObject","addParent","addChildren","addSiblings","HideFirstParentEnd","topEdge","topEdgeClickHandler","stopPropagation","parentState","isFunction","nodeData","bottomEdgeClickHandler","childrenState","hEdgeClickHandler","$hEdge","siblingsState","families","expandVNodesEnd","vNodes","collapseVNodesEnd","toggleVNodes","$toggleBtn","$descWrapper","$descendants","$children","createGhostNode","$nodeDiv","origEvent","isFirefox","test","navigator","userAgent","toLowerCase","dataTransfer","setData","ghostNode","nodeCover","querySelector","createElementNS","add","appendChild","transValues","scale","setAttribute","outerWidth","outerHeight","xOffset","offsetX","yOffset","offsetY","ghostNodeWrapper","createElement","src","XMLSerializer","serializeToString","setDragImage","filterAllowedDropNodes","$dragged","$dragZone","$dragHier","dropCriteria","dragstartHandler","dragoverHandler","dropEffect","dragendHandler","dropHandler","$dropZone","dropEvent","draggedNode","dragZone","dropZone","isDefaultPrevented","dropColspan","horizontalEdges","before","$dropSibs","after","dragColspan","$dragSibs","touchstartHandler","touchHandled","touchMoved","innerText","touchmoveHandler","hasClass","simulateMouseEvent","$touchingNode","elementFromPoint","touchingNodeElement","touchTargetNode","touchendHandler","fakeEventForDropHandler","simulatedType","touch","changedTouches","simulatedEvent","createEvent","initMouseEvent","screenX","screenY","dispatchEvent","bindDragDrop","createNode","level","child","parentId","className","nodeTemplate","nodeContent","verticalLevel","Number","substr","icon","prepend","$appendTo","parentsUntil","$nodeWrapper","childrenData","hasChildren","Object","keys","$nodesLayer","isHidden","collapsed","isVerticalLayer","$upperLines","lowerLines","$nodeCell","buildChildNode","buildParentNode","$currentRoot","$table","complementLine","$oneSibling","siblingCount","existingSibligCount","buildSiblingNode","$nodeChart","newSiblingCount","isArray","insertPostion","floor","$siblingTds","unwrap","removeNodes","$mask","sourceChart","html2canvas","width","clientHeight","clientWidth","height","onclone","cloneDoc","onrendered","canvas","doc","docWidth","docHeight","jsPDF","addImage","toDataURL","save","isWebkit","documentElement","isFf","sidebar","isEdge","appName","appVersion","msSaveBlob","msToBlob","selector","then","fn","orgchart"],"mappings":"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","file":"jquery.orgchart.min.js","sourcesContent":["/*\n * jQuery OrgChart Plugin\n * https://github.com/dabeng/OrgChart\n *\n * Copyright 2016, dabeng\n * https://github.com/dabeng\n *\n * Licensed under the MIT license:\n * http://www.opensource.org/licenses/MIT\n */\n'use strict';\n\n(function (factory) {\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    factory(require('jquery'), window, document);\n  } else {\n    factory(jQuery, window, document);\n  }\n}(function ($, window, document, undefined) {\n  var OrgChart = function (elem, opts) {\n    this.$chartContainer = $(elem);\n    this.opts = opts;\n    this.defaultOptions = {\n      'nodeTitle': 'name',\n      'nodeId': 'id',\n      'toggleSiblingsResp': false,\n      'visibleLevel': 999,\n      'chartClass': '',\n      'exportButton': false,\n      'exportFilename': 'OrgChart',\n      'exportFileextension': 'png',\n      'parentNodeSymbol': 'fa-users',\n      'draggable': false,\n      'direction': 't2b',\n      'pan': false,\n      'zoom': false,\n      'zoominLimit': 7,\n      'zoomoutLimit': 0.5\n    };\n  };\n  //\n  OrgChart.prototype = {\n    //\n    init: function (opts) {\n      var that = this;\n      this.options = $.extend({}, this.defaultOptions, this.opts, opts);\n      // build the org-chart\n      var $chartContainer = this.$chartContainer;\n      if (this.$chart) {\n        this.$chart.remove();\n      }\n      var data = this.options.data;\n      var $chart = this.$chart = $('<div>', {\n        'data': { 'options': this.options },\n        'class': 'orgchart' + (this.options.chartClass !== '' ? ' ' + this.options.chartClass : '') + (this.options.direction !== 't2b' ? ' ' + this.options.direction : ''),\n        'click': function(event) {\n          if (!$(event.target).closest('.node').length) {\n            $chart.find('.node.focused').removeClass('focused');\n          }\n        }\n      });\n      if (typeof MutationObserver !== 'undefined') {\n        this.triggerInitEvent();\n      }\n      if ($.type(data) === 'object') {\n        if (data instanceof $) { // ul datasource\n          this.buildHierarchy($chart, this.buildJsonDS(data.children()), 0, this.options);\n        } else { // local json datasource\n          this.buildHierarchy($chart, this.options.ajaxURL ? data : this.attachRel(data, '00'));\n        }\n      } else {\n        $chart.append('<i class=\"fa fa-circle-o-notch fa-spin spinner\"></i>');\n        $.ajax({\n          'url': data,\n          'dataType': 'json'\n        })\n        .done(function(data, textStatus, jqXHR) {\n          that.buildHierarchy($chart, that.options.ajaxURL ? data : that.attachRel(data, '00'), 0, that.options);\n        })\n        .fail(function(jqXHR, textStatus, errorThrown) {\n          console.log(errorThrown);\n        })\n        .always(function() {\n          $chart.children('.spinner').remove();\n        });\n      }\n      $chartContainer.append($chart);\n\n      // append the export button\n      if (this.options.exportButton && !$chartContainer.find('.oc-export-btn').length) {\n        this.attachExportButton();\n      }\n\n      if (this.options.pan) {\n        this.bindPan();\n      }\n\n      if (this.options.zoom) {\n        this.bindZoom();\n      }\n\n      return this;\n    },\n    //\n    triggerInitEvent: function () {\n      var that = this;\n      var mo = new MutationObserver(function (mutations) {\n        mo.disconnect();\n        initTime:\n        for (var i = 0; i < mutations.length; i++) {\n          for (var j = 0; j < mutations[i].addedNodes.length; j++) {\n            if (mutations[i].addedNodes[j].classList.contains('orgchart')) {\n              if (that.options.initCompleted && typeof that.options.initCompleted === 'function') {\n                that.options.initCompleted(that.$chart);\n                var initEvent = $.Event('init.orgchart');\n                that.$chart.trigger(initEvent);\n                break initTime;\n              }\n            }\n          }\n        }\n      });\n      mo.observe(this.$chartContainer[0], { childList: true });\n    },\n    //\n    attachExportButton: function () {\n      var that = this;\n      var $exportBtn = $('<button>', {\n        'class': 'oc-export-btn' + (this.options.chartClass !== '' ? ' ' + this.options.chartClass : ''),\n        'text': 'Export',\n        'click': function(e) {\n          e.preventDefault();\n          that.export();\n        }\n      });\n      this.$chartContainer.append($exportBtn);\n    },\n    setOptions: function (opts, val) {\n      if (typeof opts === 'string') {\n        if (opts === 'pan') {\n          if (val) {\n            this.bindPan();\n          } else {\n            this.unbindPan();\n          }\n        }\n        if (opts === 'zoom') {\n          if (val) {\n            this.bindZoom();\n          } else {\n            this.unbindZoom();\n          }\n        }\n      }\n      if (typeof opts === 'object') {\n        if (opts.data) {\n          this.init(opts);\n        } else {\n          if (typeof opts.pan !== 'undefined') {\n            if (opts.pan) {\n              this.bindPan();\n            } else {\n              this.unbindPan();\n            }\n          }\n          if (typeof opts.zoom !== 'undefined') {\n            if (opts.zoom) {\n              this.bindZoom();\n            } else {\n              this.unbindZoom();\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    //\n    panStartHandler: function (e) {\n      var $chart = $(e.delegateTarget);\n      if ($(e.target).closest('.node').length || (e.touches && e.touches.length > 1)) {\n        $chart.data('panning', false);\n        return;\n      } else {\n        $chart.css('cursor', 'move').data('panning', true);\n      }\n      var lastX = 0;\n      var lastY = 0;\n      var lastTf = $chart.css('transform');\n      if (lastTf !== 'none') {\n        var temp = lastTf.split(',');\n        if (lastTf.indexOf('3d') === -1) {\n          lastX = parseInt(temp[4]);\n          lastY = parseInt(temp[5]);\n        } else {\n          lastX = parseInt(temp[12]);\n          lastY = parseInt(temp[13]);\n        }\n      }\n      var startX = 0;\n      var startY = 0;\n      if (!e.targetTouches) { // pand on desktop\n        startX = e.pageX - lastX;\n        startY = e.pageY - lastY;\n      } else if (e.targetTouches.length === 1) { // pan on mobile device\n        startX = e.targetTouches[0].pageX - lastX;\n        startY = e.targetTouches[0].pageY - lastY;\n      } else if (e.targetTouches.length > 1) {\n        return;\n      }\n      $chart.on('mousemove touchmove',function(e) {\n        if (!$chart.data('panning')) {\n          return;\n        }\n        var newX = 0;\n        var newY = 0;\n        if (!e.targetTouches) { // pand on desktop\n          newX = e.pageX - startX;\n          newY = e.pageY - startY;\n        } else if (e.targetTouches.length === 1) { // pan on mobile device\n          newX = e.targetTouches[0].pageX - startX;\n          newY = e.targetTouches[0].pageY - startY;\n        } else if (e.targetTouches.length > 1) {\n          return;\n        }\n        var lastTf = $chart.css('transform');\n        if (lastTf === 'none') {\n          if (lastTf.indexOf('3d') === -1) {\n            $chart.css('transform', 'matrix(1, 0, 0, 1, ' + newX + ', ' + newY + ')');\n          } else {\n            $chart.css('transform', 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + newX + ', ' + newY + ', 0, 1)');\n          }\n        } else {\n          var matrix = lastTf.split(',');\n          if (lastTf.indexOf('3d') === -1) {\n            matrix[4] = ' ' + newX;\n            matrix[5] = ' ' + newY + ')';\n          } else {\n            matrix[12] = ' ' + newX;\n            matrix[13] = ' ' + newY;\n          }\n          $chart.css('transform', matrix.join(','));\n        }\n      });\n    },\n    //\n    panEndHandler: function (e) {\n      if (e.data.chart.data('panning')) {\n        e.data.chart.data('panning', false).css('cursor', 'default').off('mousemove');\n      }\n    },\n    //\n    bindPan: function () {\n      this.$chartContainer.css('overflow', 'hidden');\n      this.$chart.on('mousedown touchstart', this.panStartHandler);\n      $(document).on('mouseup touchend', { 'chart': this.$chart }, this.panEndHandler);\n    },\n    //\n    unbindPan: function () {\n      this.$chartContainer.css('overflow', 'auto');\n      this.$chart.off('mousedown touchstart', this.panStartHandler);\n      $(document).off('mouseup touchend', this.panEndHandler);\n    },\n    //\n    zoomWheelHandler: function (e) {\n      var oc = e.data.oc;\n      e.preventDefault();\n      var newScale  = 1 + (e.originalEvent.deltaY > 0 ? -0.2 : 0.2);\n      oc.setChartScale(oc.$chart, newScale);\n    },\n    //\n    zoomStartHandler: function (e) {\n      if(e.touches && e.touches.length === 2) {\n        var oc = e.data.oc;\n        oc.$chart.data('pinching', true);\n        var dist = oc.getPinchDist(e);\n        oc.$chart.data('pinchDistStart', dist);\n      }\n    },\n    zoomingHandler: function (e) {\n      var oc = e.data.oc;\n      if(oc.$chart.data('pinching')) {\n        var dist = oc.getPinchDist(e);\n        oc.$chart.data('pinchDistEnd', dist);\n      }\n    },\n    zoomEndHandler: function (e) {\n      var oc = e.data.oc;\n      if(oc.$chart.data('pinching')) {\n        oc.$chart.data('pinching', false);\n        var diff = oc.$chart.data('pinchDistEnd') - oc.$chart.data('pinchDistStart');\n        if (diff > 0) {\n          oc.setChartScale(oc.$chart, 1.2);\n        } else if (diff < 0) {\n          oc.setChartScale(oc.$chart, 0.8);\n        }\n      }\n    },\n    //\n    bindZoom: function () {\n      this.$chartContainer.on('wheel', { 'oc': this }, this.zoomWheelHandler);\n      this.$chartContainer.on('touchstart', { 'oc': this }, this.zoomStartHandler);\n      $(document).on('touchmove', { 'oc': this }, this.zoomingHandler);\n      $(document).on('touchend', { 'oc': this }, this.zoomEndHandler);\n    },\n    unbindZoom: function () {\n      this.$chartContainer.off('wheel', this.zoomWheelHandler);\n      this.$chartContainer.off('touchstart', this.zoomStartHandler);\n      $(document).off('touchmove', this.zoomingHandler);\n      $(document).off('touchend', this.zoomEndHandler);\n    },\n    //\n    getPinchDist: function (e) {\n      return Math.sqrt((e.touches[0].clientX - e.touches[1].clientX) * (e.touches[0].clientX - e.touches[1].clientX) +\n      (e.touches[0].clientY - e.touches[1].clientY) * (e.touches[0].clientY - e.touches[1].clientY));\n    },\n    //\n    setChartScale: function ($chart, newScale) {\n      var opts = $chart.data('options');\n      var lastTf = $chart.css('transform');\n      var matrix = '';\n      var targetScale = 1;\n      if (lastTf === 'none') {\n        $chart.css('transform', 'scale(' + newScale + ',' + newScale + ')');\n      } else {\n        matrix = lastTf.split(',');\n        if (lastTf.indexOf('3d') === -1) {\n          targetScale = Math.abs(window.parseFloat(matrix[3]) * newScale);\n          if (targetScale > opts.zoomoutLimit && targetScale < opts.zoominLimit) {\n            $chart.css('transform', lastTf + ' scale(' + newScale + ',' + newScale + ')');\n          }\n        } else {\n          targetScale = Math.abs(window.parseFloat(matrix[1]) * newScale);\n          if (targetScale > opts.zoomoutLimit && targetScale < opts.zoominLimit) {\n            $chart.css('transform', lastTf + ' scale3d(' + newScale + ',' + newScale + ', 1)');\n          }\n        }\n      }\n    },\n    //\n    buildJsonDS: function ($li) {\n      var that = this;\n      var subObj = {\n        'name': $li.contents().eq(0).text().trim(),\n        'relationship': ($li.parent().parent().is('li') ? '1': '0') + ($li.siblings('li').length ? 1: 0) + ($li.children('ul').length ? 1 : 0)\n      };\n      if ($li.attr('data-id')) {\n        subObj.id = $li.attr('data-id');\n      }\n      $li.children('ul').children().each(function() {\n        if (!subObj.children) { subObj.children = []; }\n        subObj.children.push(that.buildJsonDS($(this)));\n      });\n      return subObj;\n    },\n    //\n    attachRel: function (data, flags) {\n      var that = this;\n      data.relationship = flags + (data.children && data.children.length > 0 ? 1 : 0);\n      if (data.children) {\n        data.children.forEach(function(item) {\n          that.attachRel(item, '1' + (data.children.length > 1 ? 1 : 0));\n        });\n      }\n      return data;\n    },\n    //\n    loopChart: function ($chart) {\n      var that = this;\n      var $tr = $chart.find('tr:first');\n      var subObj = { 'id': $tr.find('.node')[0].id };\n      $tr.siblings(':last').children().each(function() {\n        if (!subObj.children) { subObj.children = []; }\n        subObj.children.push(that.loopChart($(this)));\n      });\n      return subObj;\n    },\n    //\n    getHierarchy: function () {\n      if (typeof this.$chart === 'undefined') {\n        return 'Error: orgchart does not exist'\n      } else {\n        if (!this.$chart.find('.node').length) {\n          return 'Error: nodes do not exist'\n        } else {\n          var valid = true;\n          this.$chart.find('.node').each(function () {\n            if (!this.id) {\n              valid = false;\n              return false;\n            }\n          });\n          if (!valid) {\n            return 'Error: All nodes of orghcart to be exported must have data-id attribute!';\n          }\n        }\n      }\n      return this.loopChart(this.$chart);\n    },\n    // detect the exist/display state of related node\n    getNodeState: function ($node, relation) {\n      var $target = {};\n      var relation = relation || 'self';\n      if (relation === 'parent') {\n        $target = $node.closest('.nodes').siblings(':first');\n        if ($target.length) {\n          if ($target.is('.hidden') || (!$target.is('.hidden') && $target.closest('.nodes').is('.hidden'))) {\n            return { 'exist': true, 'visible': false };\n          }\n          return { 'exist': true, 'visible': true };\n        }\n      } else if (relation === 'children') {\n        $target = $node.closest('tr').siblings(':last');\n        if ($target.length) {\n          if (!$target.is('.hidden')) {\n            return { 'exist': true, 'visible': true };\n          }\n          return { 'exist': true, 'visible': false };\n        }\n      } else if (relation === 'siblings') {\n        $target = $node.closest('table').parent().siblings();\n        if ($target.length) {\n          if (!$target.is('.hidden') && !$target.parent().is('.hidden')) {\n            return { 'exist': true, 'visible': true };\n          }\n          return { 'exist': true, 'visible': false };\n        }\n      } else {\n        $target = $node;\n        if ($target.length) {\n          if (!(($target.closest('.nodes').length && $target.closest('.nodes').is('.hidden')) ||\n            ($target.closest('table').parent().length && $target.closest('table').parent().is('.hidden')) ||\n            ($target.parent().is('li') && ($target.closest('ul').is('.hidden') || $target.closest('verticalNodes').is('.hidden')))\n          )) {\n            return { 'exist': true, 'visible': true };\n          }\n          return { 'exist': true, 'visible': false };\n        }\n      }\n      return { 'exist': false, 'visible': false };\n    },\n    // find the related nodes\n    getRelatedNodes: function ($node, relation) {\n      if (!$node || !($node instanceof $) || !$node.is('.node')) {\n        return $();\n      }\n      if (relation === 'parent') {\n        return $node.closest('.nodes').parent().children(':first').find('.node');\n      } else if (relation === 'children') {\n        return $node.closest('tr').siblings('.nodes').children().find('.node:first');\n      } else if (relation === 'siblings') {\n        return $node.closest('table').parent().siblings().find('.node:first');\n      } else {\n        return $();\n      }\n    },\n    hideParentEnd: function (event) {\n      $(event.target).removeClass('sliding');\n      event.data.upperLevel.addClass('hidden').slice(1).removeAttr('style');\n    },\n    // recursively hide the ancestor node and sibling nodes of the specified node\n    hideParent: function ($node) {\n      var $upperLevel = $node.closest('.nodes').siblings();\n      if ($upperLevel.eq(0).find('.spinner').length) {\n        $node.closest('.orgchart').data('inAjax', false);\n      }\n      // hide the sibling nodes\n      if (this.getNodeState($node, 'siblings').visible) {\n        this.hideSiblings($node);\n      }\n      // hide the lines\n      var $lines = $upperLevel.slice(1);\n      $lines.css('visibility', 'hidden');\n      // hide the superior nodes with transition\n      var $parent = $upperLevel.eq(0).find('.node');\n      if (this.getNodeState($parent).visible) {\n        $parent.addClass('sliding slide-down').one('transitionend', { 'upperLevel': $upperLevel }, this.hideParentEnd);\n      }\n      // if the current node has the parent node, hide it recursively\n      if (this.getNodeState($parent, 'parent').visible) {\n        this.hideParent($parent);\n      }\n    },\n    showParentEnd: function (event) {\n      var $node = event.data.node;\n      $(event.target).removeClass('sliding');\n      if (this.isInAction($node)) {\n        this.switchVerticalArrow($node.children('.topEdge'));\n      }\n    },\n    // show the parent node of the specified node\n    showParent: function ($node) {\n      // just show only one superior level\n      var $upperLevel = $node.closest('.nodes').siblings().removeClass('hidden');\n      // just show only one line\n      $upperLevel.eq(2).children().slice(1, -1).addClass('hidden');\n      // show parent node with animation\n      var $parent = $upperLevel.eq(0).find('.node');\n      this.repaint($parent[0]);\n      $parent.addClass('sliding').removeClass('slide-down').one('transitionend', { 'node': $node }, this.showParentEnd.bind(this));\n    },\n    stopAjax: function ($nodeLevel) {\n      if ($nodeLevel.find('.spinner').length) {\n        $nodeLevel.closest('.orgchart').data('inAjax', false);\n      }\n    },\n    isVisibleNode: function (index, elem) {\n      return this.getNodeState($(elem)).visible;\n    },\n    //\n    hideChildrenEnd: function (event) {\n      var $node = event.data.node;\n      event.data.animatedNodes.removeClass('sliding');\n      if (event.data.isVerticalDesc) {\n        event.data.lowerLevel.addClass('hidden');\n      } else {\n        event.data.animatedNodes.closest('.nodes').prevAll('.lines').removeAttr('style').addBack().addClass('hidden');\n        event.data.lowerLevel.last().find('.verticalNodes').addClass('hidden');\n      }\n      if (this.isInAction($node)) {\n        this.switchVerticalArrow($node.children('.bottomEdge'));\n      }\n    },\n    // recursively hide the descendant nodes of the specified node\n    hideChildren: function ($node) {\n      var $lowerLevel = $node.closest('tr').siblings();\n      this.stopAjax($lowerLevel.last());\n      var $animatedNodes = $lowerLevel.last().find('.node').filter(this.isVisibleNode.bind(this));\n      var isVerticalDesc = $lowerLevel.last().is('.verticalNodes') ? true : false;\n      if (!isVerticalDesc) {\n        $animatedNodes.closest('table').closest('tr').prevAll('.lines').css('visibility', 'hidden');\n      }\n      this.repaint($animatedNodes.get(0));\n      $animatedNodes.addClass('sliding slide-up').eq(0).one('transitionend', { 'animatedNodes': $animatedNodes, 'lowerLevel': $lowerLevel, 'isVerticalDesc': isVerticalDesc, 'node': $node }, this.hideChildrenEnd.bind(this));\n    },\n    //\n    showChildrenEnd: function (event) {\n      var $node = event.data.node;\n      event.data.animatedNodes.removeClass('sliding');\n      if (this.isInAction($node)) {\n        this.switchVerticalArrow($node.children('.bottomEdge'));\n      }\n    },\n    // show the children nodes of the specified node\n    showChildren: function ($node) {\n      var that = this;\n      var $levels = $node.closest('tr').siblings();\n      var isVerticalDesc = $levels.is('.verticalNodes') ? true : false;\n      var $animatedNodes = isVerticalDesc\n        ? $levels.removeClass('hidden').find('.node').filter(this.isVisibleNode.bind(this))\n        : $levels.removeClass('hidden').eq(2).children().find('.node:first').filter(this.isVisibleNode.bind(this));\n      // the two following statements are used to enforce browser to repaint\n      this.repaint($animatedNodes.get(0));\n      $animatedNodes.addClass('sliding').removeClass('slide-up').eq(0).one('transitionend', { 'node': $node, 'animatedNodes': $animatedNodes }, this.showChildrenEnd.bind(this));\n    },\n    //\n    hideSiblingsEnd: function (event) {\n      var $node = event.data.node;\n      var $nodeContainer = event.data.nodeContainer;\n      var direction = event.data.direction;\n      event.data.lines.removeAttr('style');\n      var $siblings = direction ? (direction === 'left' ? $nodeContainer.prevAll(':not(.hidden)') : $nodeContainer.nextAll(':not(.hidden)')) : $nodeContainer.siblings();\n      $nodeContainer.closest('.nodes').prev().children(':not(.hidden)')\n        .slice(1, direction ? $siblings.length * 2 + 1 : -1).addClass('hidden');\n      event.data.animatedNodes.removeClass('sliding');\n      $siblings.find('.node:gt(0)').filter(this.isVisibleNode.bind(this))\n        .removeClass('slide-left slide-right').addClass('slide-up');\n      $siblings.find('.lines, .nodes, .verticalNodes').addClass('hidden')\n        .end().addClass('hidden');\n\n      if (this.isInAction($node)) {\n        this.switchHorizontalArrow($node);\n      }\n    },\n    // hide the sibling nodes of the specified node\n    hideSiblings: function ($node, direction) {\n      var that = this;\n      var $nodeContainer = $node.closest('table').parent();\n      if ($nodeContainer.siblings().find('.spinner').length) {\n        $node.closest('.orgchart').data('inAjax', false);\n      }\n      if (direction) {\n        if (direction === 'left') {\n          $nodeContainer.prevAll().find('.node').filter(this.isVisibleNode.bind(this)).addClass('sliding slide-right');\n        } else {\n          $nodeContainer.nextAll().find('.node').filter(this.isVisibleNode.bind(this)).addClass('sliding slide-left');\n        }\n      } else {\n        $nodeContainer.prevAll().find('.node').filter(this.isVisibleNode.bind(this)).addClass('sliding slide-right');\n        $nodeContainer.nextAll().find('.node').filter(this.isVisibleNode.bind(this)).addClass('sliding slide-left');\n      }\n      var $animatedNodes = $nodeContainer.siblings().find('.sliding');\n      var $lines = $animatedNodes.closest('.nodes').prevAll('.lines').css('visibility', 'hidden');\n      $animatedNodes.eq(0).one('transitionend', { 'node': $node, 'nodeContainer': $nodeContainer, 'direction': direction, 'animatedNodes': $animatedNodes, 'lines': $lines }, this.hideSiblingsEnd.bind(this));\n    },\n    //\n    showSiblingsEnd: function (event) {\n      var $node = event.data.node;\n      event.data.visibleNodes.removeClass('sliding');\n      if (this.isInAction($node)) {\n        this.switchHorizontalArrow($node);\n        $node.children('.topEdge').removeClass('fa-chevron-up').addClass('fa-chevron-down');\n      }\n    },\n    //\n    showRelatedParentEnd: function(event) {\n      $(event.target).removeClass('sliding');\n    },\n    // show the sibling nodes of the specified node\n    showSiblings: function ($node, direction) {\n      var that = this;\n      // firstly, show the sibling td tags\n      var $siblings = $();\n      if (direction) {\n        if (direction === 'left') {\n          $siblings = $node.closest('table').parent().prevAll().removeClass('hidden');\n        } else {\n          $siblings = $node.closest('table').parent().nextAll().removeClass('hidden');\n        }\n      } else {\n        $siblings = $node.closest('table').parent().siblings().removeClass('hidden');\n      }\n      // secondly, show the lines\n      var $upperLevel = $node.closest('table').closest('tr').siblings();\n      if (direction) {\n        $upperLevel.eq(2).children('.hidden').slice(0, $siblings.length * 2).removeClass('hidden');\n      } else {\n        $upperLevel.eq(2).children('.hidden').removeClass('hidden');\n      }\n      // thirdly, do some cleaning stuff\n      if (!this.getNodeState($node, 'parent').visible) {\n        $upperLevel.removeClass('hidden');\n        var parent = $upperLevel.find('.node')[0];\n        this.repaint(parent);\n        $(parent).addClass('sliding').removeClass('slide-down').one('transitionend', this.showRelatedParentEnd);\n      }\n      // lastly, show the sibling nodes with animation\n      var $visibleNodes = $siblings.find('.node').filter(this.isVisibleNode.bind(this));\n      this.repaint($visibleNodes.get(0));\n      $visibleNodes.addClass('sliding').removeClass('slide-left slide-right');\n      $visibleNodes.eq(0).one('transitionend', { 'node': $node, 'visibleNodes': $visibleNodes }, this.showSiblingsEnd.bind(this));\n    },\n    // start up loading status for requesting new nodes\n    startLoading: function ($edge) {\n      var $chart = this.$chart;\n      if (typeof $chart.data('inAjax') !== 'undefined' && $chart.data('inAjax') === true) {\n        return false;\n      }\n\n      $edge.addClass('hidden');\n      $edge.parent().append('<i class=\"fa fa-circle-o-notch fa-spin spinner\"></i>')\n        .children().not('.spinner').css('opacity', 0.2);\n      $chart.data('inAjax', true);\n      $('.oc-export-btn' + (this.options.chartClass !== '' ? '.' + this.options.chartClass : '')).prop('disabled', true);\n      return true;\n    },\n    // terminate loading status for requesting new nodes\n    endLoading: function ($edge) {\n      var $node = $edge.parent();\n      $edge.removeClass('hidden');\n      $node.find('.spinner').remove();\n      $node.children().removeAttr('style');\n      this.$chart.data('inAjax', false);\n      $('.oc-export-btn' + (this.options.chartClass !== '' ? '.' + this.options.chartClass : '')).prop('disabled', false);\n    },\n    // whether the cursor is hovering over the node\n    isInAction: function ($node) {\n      return $node.children('.edge').attr('class').indexOf('fa-') > -1 ? true : false;\n    },\n    //\n    switchVerticalArrow: function ($arrow) {\n      $arrow.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');\n    },\n    //\n    switchHorizontalArrow: function ($node) {\n      var opts = this.options;\n      if (opts.toggleSiblingsResp && (typeof opts.ajaxURL === 'undefined' || $node.closest('.nodes').data('siblingsLoaded'))) {\n        var $prevSib = $node.closest('table').parent().prev();\n        if ($prevSib.length) {\n          if ($prevSib.is('.hidden')) {\n            $node.children('.leftEdge').addClass('fa-chevron-left').removeClass('fa-chevron-right');\n          } else {\n            $node.children('.leftEdge').addClass('fa-chevron-right').removeClass('fa-chevron-left');\n          }\n        }\n        var $nextSib = $node.closest('table').parent().next();\n        if ($nextSib.length) {\n          if ($nextSib.is('.hidden')) {\n            $node.children('.rightEdge').addClass('fa-chevron-right').removeClass('fa-chevron-left');\n          } else {\n            $node.children('.rightEdge').addClass('fa-chevron-left').removeClass('fa-chevron-right');\n          }\n        }\n      } else {\n        var $sibs = $node.closest('table').parent().siblings();\n        var sibsVisible = $sibs.length ? !$sibs.is('.hidden') : false;\n        $node.children('.leftEdge').toggleClass('fa-chevron-right', sibsVisible).toggleClass('fa-chevron-left', !sibsVisible);\n        $node.children('.rightEdge').toggleClass('fa-chevron-left', sibsVisible).toggleClass('fa-chevron-right', !sibsVisible);\n      }\n    },\n    //\n    repaint: function (node) {\n      if (node) {\n        node.style.offsetWidth = node.offsetWidth;\n      }\n    },\n    //\n    nodeEnterLeaveHandler: function (event) {\n      var $node = $(event.delegateTarget), flag = false;\n      var $topEdge = $node.children('.topEdge');\n      var $rightEdge = $node.children('.rightEdge');\n      var $bottomEdge = $node.children('.bottomEdge');\n      var $leftEdge = $node.children('.leftEdge');\n      if (event.type === 'mouseenter') {\n        if ($topEdge.length) {\n          flag = this.getNodeState($node, 'parent').visible;\n          $topEdge.toggleClass('fa-chevron-up', !flag).toggleClass('fa-chevron-down', flag);\n        }\n        if ($bottomEdge.length) {\n          flag = this.getNodeState($node, 'children').visible;\n          $bottomEdge.toggleClass('fa-chevron-down', !flag).toggleClass('fa-chevron-up', flag);\n        }\n        if ($leftEdge.length) {\n          this.switchHorizontalArrow($node);\n        }\n      } else {\n        $node.children('.edge').removeClass('fa-chevron-up fa-chevron-down fa-chevron-right fa-chevron-left');\n      }\n    },\n    //\n    nodeClickHandler: function (event) {\n      this.$chart.find('.focused').removeClass('focused');\n      $(event.delegateTarget).addClass('focused');\n    },\n    // load new nodes by ajax\n    loadNodes: function (rel, url, $edge) {\n      var that = this;\n      var opts = this.options;\n      $.ajax({ 'url': url, 'dataType': 'json' })\n      .done(function (data) {\n        if (that.$chart.data('inAjax')) {\n          if (rel === 'parent') {\n            if (!$.isEmptyObject(data)) {\n              that.addParent($edge.parent(), data);\n            }\n          } else if (rel === 'children') {\n            if (data.children.length) {\n              that.addChildren($edge.parent(), data[rel]);\n            }\n          } else {\n            that.addSiblings($edge.parent(), data.siblings ? data.siblings : data);\n          }\n        }\n      })\n      .fail(function () {\n        console.log('Failed to get ' + rel + ' data');\n      })\n      .always(function () {\n        that.endLoading($edge);\n      });\n    },\n    //\n    HideFirstParentEnd: function (event) {\n      var $topEdge = event.data.topEdge;\n      var $node = $topEdge.parent();\n      if (this.isInAction($node)) {\n        this.switchVerticalArrow($topEdge);\n        this.switchHorizontalArrow($node);\n      }\n    },\n    //\n    topEdgeClickHandler: function (event) {\n      event.stopPropagation();\n      var that = this;\n      var $topEdge = $(event.target);\n      var $node = $(event.delegateTarget);\n      var parentState = this.getNodeState($node, 'parent');\n      if (parentState.exist) {\n        var $parent = $node.closest('table').closest('tr').siblings(':first').find('.node');\n        if ($parent.is('.sliding')) { return; }\n        // hide the ancestor nodes and sibling nodes of the specified node\n        if (parentState.visible) {\n          this.hideParent($node);\n          $parent.one('transitionend', { 'topEdge': $topEdge }, this.HideFirstParentEnd.bind(this));\n        } else { // show the ancestors and siblings\n          this.showParent($node);\n        }\n      } else { // load the new parent node of the specified node by ajax request\n        // start up loading status\n        if (this.startLoading($topEdge)) {\n          var opts = this.options;\n          var url = $.isFunction(opts.ajaxURL.parent) ? opts.ajaxURL.parent(event.data.nodeData) : opts.ajaxURL.parent + $node[0].id;\n          this.loadNodes('parent', url, $topEdge);\n        }\n      }\n    },\n    //\n    bottomEdgeClickHandler: function (event) {\n      event.stopPropagation();\n      var $bottomEdge = $(event.target);\n      var $node = $(event.delegateTarget);\n      var childrenState = this.getNodeState($node, 'children');\n      if (childrenState.exist) {\n        var $children = $node.closest('tr').siblings(':last');\n        if ($children.find('.sliding').length) { return; }\n        // hide the descendant nodes of the specified node\n        if (childrenState.visible) {\n          this.hideChildren($node);\n        } else { // show the descendants\n          this.showChildren($node);\n        }\n      } else { // load the new children nodes of the specified node by ajax request\n        if (this.startLoading($bottomEdge)) {\n          var opts = this.options;\n          var url = $.isFunction(opts.ajaxURL.children) ? opts.ajaxURL.children(event.data.nodeData) : opts.ajaxURL.children + $node[0].id;\n          this.loadNodes('children', url, $bottomEdge);\n        }\n      }\n    },\n    //\n    hEdgeClickHandler: function (event) {\n      event.stopPropagation();\n      var $hEdge = $(event.target);\n      var $node = $(event.delegateTarget);\n      var opts = this.options;\n      var siblingsState = this.getNodeState($node, 'siblings');\n      if (siblingsState.exist) {\n        var $siblings = $node.closest('table').parent().siblings();\n        if ($siblings.find('.sliding').length) { return; }\n        if (opts.toggleSiblingsResp) {\n          var $prevSib = $node.closest('table').parent().prev();\n          var $nextSib = $node.closest('table').parent().next();\n          if ($hEdge.is('.leftEdge')) {\n            if ($prevSib.is('.hidden')) {\n              this.showSiblings($node, 'left');\n            } else {\n              this.hideSiblings($node, 'left');\n            }\n          } else {\n            if ($nextSib.is('.hidden')) {\n              this.showSiblings($node, 'right');\n            } else {\n              this.hideSiblings($node, 'right');\n            }\n          }\n        } else {\n          if (siblingsState.visible) {\n            this.hideSiblings($node);\n          } else {\n            this.showSiblings($node);\n          }\n        }\n      } else {\n        // load the new sibling nodes of the specified node by ajax request\n        if (this.startLoading($hEdge)) {\n          var nodeId = $node[0].id;\n          var url = (this.getNodeState($node, 'parent').exist) ?\n            ($.isFunction(opts.ajaxURL.siblings) ? opts.ajaxURL.siblings(event.data.nodeData) : opts.ajaxURL.siblings + nodeId) :\n            ($.isFunction(opts.ajaxURL.families) ? opts.ajaxURL.families(event.data.nodeData) : opts.ajaxURL.families + nodeId);\n          this.loadNodes('siblings', url, $hEdge);\n        }\n      }\n    },\n    //\n    expandVNodesEnd: function (event) {\n      event.data.vNodes.removeClass('sliding');\n    },\n    //\n    collapseVNodesEnd: function (event) {\n      event.data.vNodes.removeClass('sliding').closest('ul').addClass('hidden');\n    },\n    // event handler for toggle buttons in Hybrid(horizontal + vertical) OrgChart\n    toggleVNodes: function (event) {\n      var $toggleBtn = $(event.target);\n      var $descWrapper = $toggleBtn.parent().next();\n      var $descendants = $descWrapper.find('.node');\n      var $children = $descWrapper.children().children('.node');\n      if ($children.is('.sliding')) { return; }\n      $toggleBtn.toggleClass('fa-plus-square fa-minus-square');\n      if ($descendants.eq(0).is('.slide-up')) {\n        $descWrapper.removeClass('hidden');\n        this.repaint($children.get(0));\n        $children.addClass('sliding').removeClass('slide-up').eq(0).one('transitionend', { 'vNodes': $children }, this.expandVNodesEnd);\n      } else {\n        $descendants.addClass('sliding slide-up').eq(0).one('transitionend', { 'vNodes': $descendants }, this.collapseVNodesEnd);\n        $descendants.find('.toggleBtn').removeClass('fa-minus-square').addClass('fa-plus-square');\n      }\n    },\n    //\n    createGhostNode: function (event) {\n      var $nodeDiv = $(event.target);\n      var opts = this.options;\n      var origEvent = event.originalEvent;\n      var isFirefox = /firefox/.test(window.navigator.userAgent.toLowerCase());\n      if (isFirefox) {\n        origEvent.dataTransfer.setData('text/html', 'hack for firefox');\n      }\n      var ghostNode, nodeCover;\n      if (!document.querySelector('.ghost-node')) {\n        ghostNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        ghostNode.classList.add('ghost-node');\n        nodeCover = document.createElementNS('http://www.w3.org/2000/svg','rect');\n        ghostNode.appendChild(nodeCover);\n        $nodeDiv.closest('.orgchart').append(ghostNode);\n      } else {\n        ghostNode = $nodeDiv.closest('.orgchart').children('.ghost-node').get(0);\n        nodeCover = $(ghostNode).children().get(0);\n      }\n      var transValues = $nodeDiv.closest('.orgchart').css('transform').split(',');\n      var scale = Math.abs(window.parseFloat((opts.direction === 't2b' || opts.direction === 'b2t') ? transValues[0].slice(transValues[0].indexOf('(') + 1) : transValues[1]));\n      ghostNode.setAttribute('width', $nodeDiv.outerWidth(false));\n      ghostNode.setAttribute('height', $nodeDiv.outerHeight(false));\n      nodeCover.setAttribute('x',5 * scale);\n      nodeCover.setAttribute('y',5 * scale);\n      nodeCover.setAttribute('width', 120 * scale);\n      nodeCover.setAttribute('height', 40 * scale);\n      nodeCover.setAttribute('rx', 4 * scale);\n      nodeCover.setAttribute('ry', 4 * scale);\n      nodeCover.setAttribute('stroke-width', 1 * scale);\n      var xOffset = origEvent.offsetX * scale;\n      var yOffset = origEvent.offsetY * scale;\n      if (opts.direction === 'l2r') {\n        xOffset = origEvent.offsetY * scale;\n        yOffset = origEvent.offsetX * scale;\n      } else if (opts.direction === 'r2l') {\n        xOffset = $nodeDiv.outerWidth(false) - origEvent.offsetY * scale;\n        yOffset = origEvent.offsetX * scale;\n      } else if (opts.direction === 'b2t') {\n        xOffset = $nodeDiv.outerWidth(false) - origEvent.offsetX * scale;\n        yOffset = $nodeDiv.outerHeight(false) - origEvent.offsetY * scale;\n      }\n      if (isFirefox) { // hack for old version of Firefox(< 48.0)\n        nodeCover.setAttribute('fill', 'rgb(255, 255, 255)');\n        nodeCover.setAttribute('stroke', 'rgb(191, 0, 0)');\n        var ghostNodeWrapper = document.createElement('img');\n        ghostNodeWrapper.src = 'data:image/svg+xml;utf8,' + (new XMLSerializer()).serializeToString(ghostNode);\n        origEvent.dataTransfer.setDragImage(ghostNodeWrapper, xOffset, yOffset);\n      } else {\n        origEvent.dataTransfer.setDragImage(ghostNode, xOffset, yOffset);\n      }\n    },\n    //\n    filterAllowedDropNodes: function ($dragged) {\n      var opts = this.options;\n      var $dragZone = $dragged.closest('.nodes').siblings().eq(0).find('.node:first');\n      var $dragHier = $dragged.closest('table').find('.node');\n      this.$chart.data('dragged', $dragged)\n        .find('.node').each(function (index, node) {\n          if ($dragHier.index(node) === -1) {\n            if (opts.dropCriteria) {\n              if (opts.dropCriteria($dragged, $dragZone, $(node))) {\n                $(node).addClass('allowedDrop');\n              }\n            } else {\n              $(node).addClass('allowedDrop');\n            }\n          }\n        });\n    },\n    //\n    dragstartHandler: function (event) {\n      // if users enable zoom or direction options\n      if (this.$chart.css('transform') !== 'none') {\n        this.createGhostNode(event);\n      }\n      this.filterAllowedDropNodes($(event.target));\n    },\n    //\n    dragoverHandler: function (event) {\n      event.preventDefault();\n      if (!$(event.delegateTarget).is('.allowedDrop')) {\n        event.originalEvent.dataTransfer.dropEffect = 'none';\n      }\n    },\n    //\n    dragendHandler: function (event) {\n      this.$chart.find('.allowedDrop').removeClass('allowedDrop');\n    },\n    //\n    dropHandler: function (event) {\n      var $dropZone = $(event.delegateTarget);\n      var $dragged = this.$chart.data('dragged');\n      var $dragZone = $dragged.closest('.nodes').siblings().eq(0).children();\n      var dropEvent = $.Event('nodedrop.orgchart');\n      this.$chart.trigger(dropEvent, { 'draggedNode': $dragged, 'dragZone': $dragZone.children(), 'dropZone': $dropZone });\n      if (dropEvent.isDefaultPrevented()) {\n        return;\n      }\n      // firstly, deal with the hierarchy of drop zone\n      if (!$dropZone.closest('tr').siblings().length) { // if the drop zone is a leaf node\n        $dropZone.append('<i class=\"edge verticalEdge bottomEdge fa\"></i>')\n          .parent().attr('colspan', 2)\n          .parent().after('<tr class=\"lines\"><td colspan=\"2\"><div class=\"downLine\"></div></td></tr>'\n          + '<tr class=\"lines\"><td class=\"rightLine\"></td><td class=\"leftLine\"></td></tr>'\n          + '<tr class=\"nodes\"></tr>')\n          .siblings(':last').append($dragged.find('.horizontalEdge').remove().end().closest('table').parent());\n      } else {\n        var dropColspan = parseInt($dropZone.parent().attr('colspan')) + 2;\n        var horizontalEdges = '<i class=\"edge horizontalEdge rightEdge fa\"></i><i class=\"edge horizontalEdge leftEdge fa\"></i>';\n        $dropZone.closest('tr').next().addBack().children().attr('colspan', dropColspan);\n        if (!$dragged.find('.horizontalEdge').length) {\n          $dragged.append(horizontalEdges);\n        }\n        $dropZone.closest('tr').siblings().eq(1).children(':last').before('<td class=\"leftLine topLine\"></td><td class=\"rightLine topLine\"></td>')\n          .end().next().append($dragged.closest('table').parent());\n        var $dropSibs = $dragged.closest('table').parent().siblings().find('.node:first');\n        if ($dropSibs.length === 1) {\n          $dropSibs.append(horizontalEdges);\n        }\n      }\n      // secondly, deal with the hierarchy of dragged node\n      var dragColspan = parseInt($dragZone.attr('colspan'));\n      if (dragColspan > 2) {\n        $dragZone.attr('colspan', dragColspan - 2)\n          .parent().next().children().attr('colspan', dragColspan - 2)\n          .end().next().children().slice(1, 3).remove();\n        var $dragSibs = $dragZone.parent().siblings('.nodes').children().find('.node:first');\n        if ($dragSibs.length ===1) {\n          $dragSibs.find('.horizontalEdge').remove();\n        }\n      } else {\n        $dragZone.removeAttr('colspan')\n          .find('.bottomEdge').remove()\n          .end().end().siblings().remove();\n      }\n    },\n    //\n    touchstartHandler: function (event) {\n        console.log(\"orgChart: touchstart 1: touchHandled=\" + this.touchHandled + \", touchMoved=\" + this.touchMoved + \", target=\" + event.target.innerText);\n        if (this.touchHandled)\n            return;\n        this.touchHandled = true;\n        this.touchMoved = false;     // this is so we can work out later if this was a 'press' or a 'drag' touch\n        event.preventDefault();\n    },\n    //\n    touchmoveHandler: function (event) {\n      if (!this.touchHandled)\n        return;\n      event.preventDefault();\n      if (!this.touchMoved) {\n        var nodeIsSelected = $(this).hasClass('focused');\n        console.log(\"orgChart: touchmove 1: \" + event.touches.length + \" touches, we have not moved, so simulate a drag start\", event.touches);\n        // TODO: visualise the start of the drag (as would happen on desktop)\n        this.simulateMouseEvent(event, 'dragstart');\n      }\n      this.touchMoved = true;\n      var $touching = $(document.elementFromPoint(event.touches[0].clientX, event.touches[0].clientY));\n      var $touchingNode = $touching.closest('div.node');\n \n      if ($touchingNode.length > 0) {\n        var touchingNodeElement = $touchingNode[0];\n        // TODO: simulate the dragover visualisation\n        if ($touchingNode.is('.allowedDrop')) {\n            console.log(\"orgChart: touchmove 2: this node (\" + touchingNodeElement.id + \") is allowed to be a drop target\");\n            this.touchTargetNode = touchingNodeElement;\n        } else {\n            console.log(\"orgChart: touchmove 3: this node (\" + touchingNodeElement.id + \") is NOT allowed to be a drop target\");\n            this.touchTargetNode = null;\n        }\n      } else {\n        console.log(\"orgchart: touchmove 4: not touching a node\");\n        this.touchTargetNode = null;\n      }\n    },\n    //\n    touchendHandler: function (event) {\n      console.log(\"orgChart: touchend 1: touchHandled=\" + this.touchHandled + \", touchMoved=\" + this.touchMoved + \", \" + event.target.innerText + \" \");\n      if (!this.touchHandled) {\n          console.log(\"orgChart: touchend 2: not handled by us, so aborting\");\n          return;\n      }\n      if (this.touchMoved) {\n          // we've had movement, so this was a 'drag' touch\n          if (this.touchTargetNode) {\n              console.log(\"orgChart: touchend 3: moved to a node, so simulating drop\");\n              var fakeEventForDropHandler = { delegateTarget: this.touchTargetNode };\n              this.dropHandler(fakeEventForDropHandler);\n              this.touchTargetNode = null;\n          }\n          console.log(\"orgChart: touchend 4: simulating dragend\");\n          this.simulateMouseEvent(event, 'dragend');\n      }\n      else {\n          // we did not move, so assume this was a 'press' touch\n          console.log(\"orgChart: touchend 5: moved, so simulating click\");\n          this.simulateMouseEvent(event, 'click');\n      }\n      this.touchHandled = false;\n    },\n    // simulate a mouse event (so we can fake them on a touch device)\n    simulateMouseEvent: function (event, simulatedType) {\n      // Ignore multi-touch events\n      if (event.originalEvent.touches.length > 1) {\n        return;\n      }\n      var touch = event.originalEvent.changedTouches[0];\n      var simulatedEvent = document.createEvent('MouseEvents');\n      simulatedEvent.initMouseEvent(\n        simulatedType,    // type\n        true,             // bubbles                    \n        true,             // cancelable                 \n        window,           // view                       \n        1,                // detail                     \n        touch.screenX,    // screenX                    \n        touch.screenY,    // screenY                    \n        touch.clientX,    // clientX                    \n        touch.clientY,    // clientY                    \n        false,            // ctrlKey                    \n        false,            // altKey                     \n        false,            // shiftKey                   \n        false,            // metaKey                    \n        0,                // button                     \n        null              // relatedTarget              \n      );\n      // Dispatch the simulated event to the target element\n      event.target.dispatchEvent(simulatedEvent);\n    },\n    //\n    bindDragDrop: function ($node) {\n      $node.on('dragstart', this.dragstartHandler.bind(this))\n        .on('dragover', this.dragoverHandler.bind(this))\n        .on('dragend', this.dragendHandler.bind(this))\n        .on('drop', this.dropHandler.bind(this))\n        .on('touchstart', this.touchstartHandler.bind(this))\n        .on('touchmove', this.touchmoveHandler.bind(this))\n        .on('touchend', this.touchendHandler.bind(this));\n    },\n    // create node\n    createNode: function (data) {\n      var that = this;\n      var opts = this.options;\n      var level = data.level;\n      if (data.children) {\n        $.each(data.children, function (index, child) {\n          child.parentId = data.id;\n        });\n      }\n      // construct the content of node\n      var $nodeDiv = $('<div' + (opts.draggable ? ' draggable=\"true\"' : '') + (data[opts.nodeId] ? ' id=\"' + data[opts.nodeId] + '\"' : '') + (data.parentId ? ' data-parent=\"' + data.parentId + '\"' : '') + '>')\n        .addClass('node ' + (data.className || '') +  (level > opts.visibleLevel ? ' slide-up' : ''));\n      if (opts.nodeTemplate) {\n        $nodeDiv.append(opts.nodeTemplate(data));\n      } else {\n        $nodeDiv.append('<div class=\"title\">' + data[opts.nodeTitle] + '</div>')\n          .append(typeof opts.nodeContent !== 'undefined' ? '<div class=\"content\">' + (data[opts.nodeContent] || '') + '</div>' : '');\n      }\n      // append 4 direction arrows or expand/collapse buttons\n      var flags = data.relationship || '';\n      if (opts.verticalLevel && level >= opts.verticalLevel) {\n        if ((level + 1) > opts.verticalLevel && Number(flags.substr(2,1))) {\n          var icon = level + 1 > opts.visibleLevel ? 'plus' : 'minus';\n          $nodeDiv.append('<i class=\"toggleBtn fa fa-' + icon + '-square\"></i>');\n        }\n      } else {\n        if (Number(flags.substr(0,1))) {\n          $nodeDiv.append('<i class=\"edge verticalEdge topEdge fa\"></i>');\n        }\n        if(Number(flags.substr(1,1))) {\n          $nodeDiv.append('<i class=\"edge horizontalEdge rightEdge fa\"></i>' +\n            '<i class=\"edge horizontalEdge leftEdge fa\"></i>');\n        }\n        if(Number(flags.substr(2,1))) {\n          $nodeDiv.append('<i class=\"edge verticalEdge bottomEdge fa\"></i>')\n            .children('.title').prepend('<i class=\"fa '+ opts.parentNodeSymbol + ' symbol\"></i>');\n        }\n      }\n\n      $nodeDiv.on('mouseenter mouseleave', this.nodeEnterLeaveHandler.bind(this));\n      $nodeDiv.on('click', this.nodeClickHandler.bind(this));\n      $nodeDiv.on('click', '.topEdge', { 'nodeData': data }, this.topEdgeClickHandler.bind(this));\n      $nodeDiv.on('click', '.bottomEdge', { 'nodeData': data }, this.bottomEdgeClickHandler.bind(this));\n      $nodeDiv.on('click', '.leftEdge, .rightEdge', { 'nodeData': data }, this.hEdgeClickHandler.bind(this));\n      $nodeDiv.on('click', '.toggleBtn', this.toggleVNodes.bind(this));\n\n      if (opts.draggable) {\n        this.bindDragDrop($nodeDiv);\n        this.touchHandled = false;\n        this.touchMoved = false;\n        this.touchTargetNode = null;\n      }\n      // allow user to append dom modification after finishing node create of orgchart\n      if (opts.createNode) {\n        opts.createNode($nodeDiv, data);\n      }\n\n      return $nodeDiv;\n    },\n    // recursively build the tree\n    buildHierarchy: function ($appendTo, data) {\n      var that = this;\n      var opts = this.options;\n      var level = 0;\n      if (data.level) {\n        level = data.level;\n      } else {\n        level = data.level = $appendTo.parentsUntil('.orgchart', '.nodes').length + 1;\n      }\n      // Construct the node\n      var childrenData = data.children;\n      var hasChildren = childrenData ? childrenData.length : false;\n      var $nodeWrapper;\n      if (Object.keys(data).length > 2) {\n        var $nodeDiv = this.createNode(data);\n        if (opts.verticalLevel && level >= opts.verticalLevel) {\n          $appendTo.append($nodeDiv);\n        }else {\n          $nodeWrapper = $('<table>');\n          $appendTo.append($nodeWrapper.append($('<tr/>').append($('<td' + (hasChildren ? ' colspan=\"' + childrenData.length * 2 + '\"' : '') + '></td>').append($nodeDiv))));\n        }\n      }\n      // Construct the lower level(two \"connectiong lines\" rows and \"inferior nodes\" row)\n      if (hasChildren) {\n        var isHidden = (level + 1 > opts.visibleLevel || data.collapsed) ? ' hidden' : '';\n        var isVerticalLayer = (opts.verticalLevel && (level + 1) >= opts.verticalLevel) ? true : false;\n        var $nodesLayer;\n        if (isVerticalLayer) {\n          $nodesLayer = $('<ul>');\n          if (isHidden && level + 1 > opts.verticalLevel) {\n            $nodesLayer.addClass(isHidden);\n          }\n          if (level + 1 === opts.verticalLevel) {\n            $appendTo.children('table').append('<tr class=\"verticalNodes' + isHidden + '\"><td></td></tr>')\n              .find('.verticalNodes').children().append($nodesLayer);\n          } else {\n            $appendTo.append($nodesLayer);\n          }\n        } else {\n          var $upperLines = $('<tr class=\"lines' + isHidden + '\"><td colspan=\"' + childrenData.length * 2 + '\"><div class=\"downLine\"></div></td></tr>');\n          var lowerLines = '<tr class=\"lines' + isHidden + '\"><td class=\"rightLine\"></td>';\n          for (var i=1; i<childrenData.length; i++) {\n            lowerLines += '<td class=\"leftLine topLine\"></td><td class=\"rightLine topLine\"></td>';\n          }\n          lowerLines += '<td class=\"leftLine\"></td></tr>';\n          $nodesLayer = $('<tr class=\"nodes' + isHidden + '\">');\n          if (Object.keys(data).length === 2) {\n            $appendTo.append($upperLines).append(lowerLines).append($nodesLayer);\n          } else {\n            $nodeWrapper.append($upperLines).append(lowerLines).append($nodesLayer);\n          }\n        }\n        // recurse through children nodes\n        $.each(childrenData, function () {\n          var $nodeCell = isVerticalLayer ? $('<li>') : $('<td colspan=\"2\">');\n          $nodesLayer.append($nodeCell);\n          this.level = level + 1;\n          that.buildHierarchy($nodeCell, this);\n        });\n      }\n    },\n    // build the child nodes of specific node\n    buildChildNode: function ($appendTo, data) {\n      $appendTo.find('td:first').attr('colspan', data.length * 2);\n      this.buildHierarchy($appendTo, { 'children': data });\n    },\n    // exposed method\n    addChildren: function ($node, data) {\n      this.buildChildNode($node.closest('table'), data);\n      if (!$node.children('.bottomEdge').length) {\n        $node.append('<i class=\"edge verticalEdge bottomEdge fa\"></i>');\n      }\n      if (!$node.find('.symbol').length) {\n        $node.children('.title').prepend('<i class=\"fa '+ this.options.parentNodeSymbol + ' symbol\"></i>');\n      }\n      if (this.isInAction($node)) {\n        this.switchVerticalArrow($node.children('.bottomEdge'));\n      }\n    },\n    // build the parent node of specific node\n    buildParentNode: function ($currentRoot, data) {\n      data.relationship = data.relationship || '001';\n      var $table = $('<table>')\n        .append($('<tr>').append($('<td colspan=\"2\">').append(this.createNode(data))))\n        .append('<tr class=\"lines\"><td colspan=\"2\"><div class=\"downLine\"></div></td></tr>')\n        .append('<tr class=\"lines\"><td class=\"rightLine\"></td><td class=\"leftLine\"></td></tr>');\n      this.$chart.prepend($table)\n        .children('table:first').append('<tr class=\"nodes\"><td colspan=\"2\"></td></tr>')\n        .children('tr:last').children().append(this.$chart.children('table').last());\n    },\n    // exposed method\n    addParent: function ($currentRoot, data) {\n      this.buildParentNode($currentRoot, data);\n      if (!$currentRoot.children('.topEdge').length) {\n        $currentRoot.children('.title').after('<i class=\"edge verticalEdge topEdge fa\"></i>');\n      }\n      if (this.isInAction($currentRoot)) {\n        this.switchVerticalArrow($currentRoot.children('.topEdge'));\n      }\n    },\n    // subsequent processing of build sibling nodes\n    complementLine: function ($oneSibling, siblingCount, existingSibligCount) {\n      var lines = '';\n      for (var i = 0; i < existingSibligCount; i++) {\n        lines += '<td class=\"leftLine topLine\"></td><td class=\"rightLine topLine\"></td>';\n      }\n      $oneSibling.parent().prevAll('tr:gt(0)').children().attr('colspan', siblingCount * 2)\n        .end().next().children(':first').after(lines);\n    },\n    // build the sibling nodes of specific node\n    buildSiblingNode: function ($nodeChart, data) {\n      var newSiblingCount = $.isArray(data) ? data.length : data.children.length;\n      var existingSibligCount = $nodeChart.parent().is('td') ? $nodeChart.closest('tr').children().length : 1;\n      var siblingCount = existingSibligCount + newSiblingCount;\n      var insertPostion = (siblingCount > 1) ? Math.floor(siblingCount/2 - 1) : 0;\n      // just build the sibling nodes for the specific node\n      if ($nodeChart.parent().is('td')) {\n        var $parent = $nodeChart.closest('tr').prevAll('tr:last');\n        $nodeChart.closest('tr').prevAll('tr:lt(2)').remove();\n        this.buildChildNode($nodeChart.parent().closest('table'), data);\n        var $siblingTds = $nodeChart.parent().closest('table').children('tr:last').children('td');\n        if (existingSibligCount > 1) {\n          this.complementLine($siblingTds.eq(0).before($nodeChart.closest('td').siblings().addBack().unwrap()), siblingCount, existingSibligCount);\n        } else {\n          this.complementLine($siblingTds.eq(insertPostion).after($nodeChart.closest('td').unwrap()), siblingCount, 1);\n        }\n      } else { // build the sibling nodes and parent node for the specific ndoe\n        this.buildHierarchy($nodeChart.closest('.orgchart'), data);\n        this.complementLine($nodeChart.next().children('tr:last').children().eq(insertPostion).after($('<td colspan=\"2\">').append($nodeChart)),\n          siblingCount, 1);\n      }\n    },\n    //\n    addSiblings: function ($node, data) {\n      this.buildSiblingNode($node.closest('table'), data);\n      $node.closest('.nodes').data('siblingsLoaded', true);\n      if (!$node.children('.leftEdge').length) {\n        $node.children('.topEdge').after('<i class=\"edge horizontalEdge rightEdge fa\"></i><i class=\"edge horizontalEdge leftEdge fa\"></i>');\n      }\n      if (this.isInAction($node)) {\n        this.switchHorizontalArrow($node);\n        $node.children('.topEdge').removeClass('fa-chevron-up').addClass('fa-chevron-down');\n      }\n    },\n    //\n    removeNodes: function ($node) {\n      var $parent = $node.closest('table').parent();\n      var $sibs = $parent.parent().siblings();\n      if ($parent.is('td')) {\n        if (this.getNodeState($node, 'siblings').exist) {\n          $sibs.eq(2).children('.topLine:lt(2)').remove();\n          $sibs.slice(0, 2).children().attr('colspan', $sibs.eq(2).children().length);\n          $parent.remove();\n        } else {\n          $sibs.eq(0).children().removeAttr('colspan')\n            .find('.bottomEdge').remove()\n            .end().end().siblings().remove();\n        }\n      } else {\n        $parent.add($parent.siblings()).remove();\n      }\n    },\n    //\n    export: function (exportFilename, exportFileextension) {\n      var that = this;\n      exportFilename = (typeof exportFilename !== 'undefined') ?  exportFilename : this.options.exportFilename;\n      exportFileextension = (typeof exportFileextension !== 'undefined') ?  exportFileextension : this.options.exportFileextension;\n      if ($(this).children('.spinner').length) {\n        return false;\n      }\n      var $chartContainer = this.$chartContainer;\n      var $mask = $chartContainer.find('.mask');\n      if (!$mask.length) {\n        $chartContainer.append('<div class=\"mask\"><i class=\"fa fa-circle-o-notch fa-spin spinner\"></i></div>');\n      } else {\n        $mask.removeClass('hidden');\n      }\n      var sourceChart = $chartContainer.addClass('canvasContainer').find('.orgchart:not(\".hidden\")').get(0);\n      var flag = that.options.direction === 'l2r' || that.options.direction === 'r2l';\n      html2canvas(sourceChart, {\n        'width': flag ? sourceChart.clientHeight : sourceChart.clientWidth,\n        'height': flag ? sourceChart.clientWidth : sourceChart.clientHeight,\n        'onclone': function (cloneDoc) {\n          $(cloneDoc).find('.canvasContainer').css('overflow', 'visible')\n            .find('.orgchart:not(\".hidden\"):first').css('transform', '');\n        },\n        'onrendered': function (canvas) {\n          $chartContainer.find('.mask').addClass('hidden');\n          if (exportFileextension.toLowerCase() === 'pdf') {\n            var doc = {};\n            var docWidth = Math.floor(canvas.width * 0.2646);\n            var docHeight = Math.floor(canvas.height * 0.2646);\n            if (docWidth > docHeight) {\n              doc = new jsPDF('l', 'mm', [docWidth, docHeight]);\n            } else {\n              doc = new jsPDF('p', 'mm', [docHeight, docWidth]);\n            }\n            doc.addImage(canvas.toDataURL(), 'png', 0, 0);\n            doc.save(exportFilename + '.pdf');\n          } else {\n            var isWebkit = 'WebkitAppearance' in document.documentElement.style;\n            var isFf = !!window.sidebar;\n            var isEdge = navigator.appName === 'Microsoft Internet Explorer' || (navigator.appName === \"Netscape\" && navigator.appVersion.indexOf('Edge') > -1);\n\n            if ((!isWebkit && !isFf) || isEdge) {\n              window.navigator.msSaveBlob(canvas.msToBlob(), exportFilename + '.png');\n            } else {\n              var selector = '.oc-download-btn' + (that.options.chartClass !== '' ? '.' + that.options.chartClass : '');\n              if (!$chartContainer.find(selector).length) {\n                $chartContainer.append('<a class=\"oc-download-btn' + (that.options.chartClass !== '' ? ' ' + that.options.chartClass : '') + '\"'\n                  + ' download=\"' + exportFilename + '.png\"></a>');\n              }\n              $chartContainer.find(selector).attr('href', canvas.toDataURL())[0].click();\n            }\n          }\n        }\n      })\n      .then(function () {\n        $chartContainer.removeClass('canvasContainer');\n      }, function () {\n        $chartContainer.removeClass('canvasContainer');\n      });\n    }\n  };\n\n  $.fn.orgchart = function (opts) {\n    return new OrgChart(this, opts).init();\n  };\n\n}));\n"]}